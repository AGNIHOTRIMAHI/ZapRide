{"ast":null,"code":"var _jsxFileName = \"D:\\\\ZapRide\\\\client\\\\src\\\\pages\\\\Messenger\\\\Messenger.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, ConversationHeader, Avatar, TypingIndicator, MessageSeparator, VoiceCallButton, Conversation, ConversationList, Loader } from \"@chatscope/chat-ui-kit-react\";\nimport axios from 'axios';\nimport { ConversationListItem } from '../../components/Conversation/ConversationListItem';\nimport Navbar from '../../components/Navbar/Navbar';\nimport { MessageItem } from '../../components/Conversation/MessageItem';\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Messenger = ({\n  user,\n  currentChat,\n  setCurrentChat,\n  setIsLoggedIn\n}) => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [receiver, setReceiver] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [isOnline, setIsOnline] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isLoading, setIsLoading] = useState(true); //Loading of main page\n\n  //using Reference to socket to avoid using useEffect again and again\n  const socket = useRef();\n  const scrollRef = useRef();\n  console.log(conversations);\n  console.log(\"Current chat\", currentChat);\n\n  // To fetch receiver's data\n  useEffect(() => {\n    var _currentChat$members;\n    const friendId = currentChat === null || currentChat === void 0 ? void 0 : (_currentChat$members = currentChat.members) === null || _currentChat$members === void 0 ? void 0 : _currentChat$members.find(m => m !== user._id);\n    console.log(friendId);\n    const getUser = async () => {\n      try {\n        const res = await axios(\"https://car-saathi.onrender.com/api/user/getUser/\" + friendId);\n        // console.log('friend is here',res.data)\n        setReceiver(res.data.user.name);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getUser();\n  }, [currentChat]);\n\n  // Connecting to socket and receiving message\n  useEffect(() => {\n    socket.current = io(\"https://car-saathi-socket.onrender.com\");\n    socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, []);\n\n  // For updating messages array when a real time message is received\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n\n  // To add current user to the room and get list of all users in the room\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", users => {\n      console.log(\"Online users\", users);\n      setOnlineUsers(users);\n    });\n  }, [user]);\n  console.log(socket);\n\n  // To get all conversations of the user \n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"https://car-saathi.onrender.com/api/conversation/getConversation/\" + user._id);\n        setConversations(res.data);\n        setIsLoading(false);\n        console.log(\"conversations\", res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getConversations();\n  }, [user._id]);\n\n  // To fetch messages of current chat\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"https://car-saathi.onrender.com/api/message/\" + currentChat._id);\n        setMessages(res.data);\n        setIsLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [currentChat]);\n  useEffect(() => {\n    var _scrollRef$current;\n    scrollRef === null || scrollRef === void 0 ? void 0 : (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  console.log(messages);\n\n  //To get online status of people\n  useEffect(() => {\n    var _currentChat$members2;\n    const friendId = currentChat === null || currentChat === void 0 ? void 0 : (_currentChat$members2 = currentChat.members) === null || _currentChat$members2 === void 0 ? void 0 : _currentChat$members2.find(m => m !== user._id);\n    if (friendId) {\n      const isFriendOnline = onlineUsers.some(user => (user === null || user === void 0 ? void 0 : user.userId) === friendId);\n      setIsOnline(isFriendOnline);\n    }\n  }, [currentChat, onlineUsers, user._id]);\n\n  //Function to send message\n  const handleSubmit = async e => {\n    // e.preventDefault();\n    const msg = {\n      sender: user._id,\n      conversationId: currentChat._id,\n      text: newMessage\n    };\n    const receiverId = currentChat.members.find(member => member != user._id);\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage\n    });\n    try {\n      const res = await axios.post(\"https://car-saathi.onrender.com/api/message/\", msg);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //Function to handle click on back arrow\n  const handleBack = () => {\n    setCurrentChat(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      user: user,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this), !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        height: \"90vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MainContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ConversationList, {\n          children: conversations === null || conversations === void 0 ? void 0 : conversations.map(c => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => setCurrentChat(c),\n              children: /*#__PURE__*/_jsxDEV(ConversationListItem, {\n                conversation: c,\n                user: user,\n                onlineUsers: onlineUsers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), currentChat ? isLoaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n            style: {\n              height: '600px',\n              width: 'full'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ConversationHeader, {\n              children: [/*#__PURE__*/_jsxDEV(ConversationHeader.Back, {\n                onClick: handleBack\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n                name: receiver,\n                src: `https://ui-avatars.com/api/?name=${receiver}&background=random`,\n                status: isOnline ? \"available\" : \"unavailable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ConversationHeader.Content, {\n                info: isOnline ? \"Online\" : \"Offline\",\n                userName: receiver\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n              children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(MessageItem, {\n                  message: m,\n                  own: user._id === m.sender\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n              placeholder: \"Type message here\",\n              attachButton: \"false\",\n              value: newMessage,\n              onChange: innerText => {\n                console.log(innerText);\n                setNewMessage(innerText);\n              },\n              onSend: handleSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center w-full items-center bold text-gray-300 text-3xl\",\n          children: \"Open a chat to start a conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(Messenger, \"SR8vs56kY5ptKOTaa7UZzMnmn+8=\");\n_c = Messenger;\nvar _c;\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styles","MainContainer","ChatContainer","MessageList","Message","MessageInput","ConversationHeader","Avatar","TypingIndicator","MessageSeparator","VoiceCallButton","Conversation","ConversationList","Loader","axios","ConversationListItem","Navbar","MessageItem","io","jsxDEV","_jsxDEV","Fragment","_Fragment","Messenger","user","currentChat","setCurrentChat","setIsLoggedIn","_s","conversations","setConversations","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","receiver","setReceiver","onlineUsers","setOnlineUsers","isOnline","setIsOnline","isLoaded","setIsLoaded","isLoading","setIsLoading","socket","scrollRef","console","log","_currentChat$members","friendId","members","find","m","_id","getUser","res","data","name","err","current","on","sender","senderId","text","createdAt","Date","now","includes","prev","emit","users","getConversations","get","getMessages","_scrollRef$current","scrollIntoView","behavior","_currentChat$members2","isFriendOnline","some","userId","handleSubmit","e","msg","conversationId","receiverId","member","post","handleBack","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","height","map","c","onClick","conversation","width","Back","src","status","Content","info","userName","ref","message","own","placeholder","attachButton","value","onChange","innerText","onSend","className","_c","$RefreshReg$"],"sources":["D:/ZapRide/client/src/pages/Messenger/Messenger.jsx"],"sourcesContent":["import React, { useState,useEffect, useRef } from 'react'\r\nimport styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\r\nimport {\r\n  MainContainer,\r\n  ChatContainer,\r\n  MessageList,\r\n  Message,\r\n  MessageInput,\r\n  ConversationHeader,\r\n  Avatar,\r\n  TypingIndicator,\r\n  MessageSeparator,\r\n  VoiceCallButton,\r\n  Conversation,\r\n  ConversationList,\r\n  Loader\r\n} from \"@chatscope/chat-ui-kit-react\";\r\nimport axios from 'axios';\r\nimport { ConversationListItem } from '../../components/Conversation/ConversationListItem';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport { MessageItem } from '../../components/Conversation/MessageItem';\r\nimport {io} from \"socket.io-client\"\r\n\r\nexport const Messenger = ({user,currentChat,setCurrentChat, setIsLoggedIn}) => {\r\n    const [conversations,setConversations] = useState([])\r\n    const [messages,setMessages] = useState([])\r\n    const [newMessage,setNewMessage] = useState(\"\")\r\n    const [arrivalMessage,setArrivalMessage] = useState(null)\r\n    const [receiver,setReceiver] = useState(null)\r\n    const [onlineUsers,setOnlineUsers] = useState([])\r\n    const [isOnline,setIsOnline] = useState(false)\r\n    const [isLoaded,setIsLoaded] = useState(false)\r\n    const [isLoading,setIsLoading] = useState(true)//Loading of main page\r\n\r\n    //using Reference to socket to avoid using useEffect again and again\r\n    const socket = useRef()\r\n    const scrollRef = useRef()\r\n\r\n    console.log(conversations)\r\n    console.log(\"Current chat\",currentChat)\r\n    \r\n    // To fetch receiver's data\r\n    useEffect(()=>{\r\n        const friendId = currentChat?.members?.find(m=> m !== user._id)\r\n        console.log(friendId)\r\n        const getUser = async()=>{\r\n            try{\r\n                const res= await axios(\"https://car-saathi.onrender.com/api/user/getUser/\"+friendId);\r\n                // console.log('friend is here',res.data)\r\n                setReceiver(res.data.user.name)\r\n\r\n            }catch(err){\r\n               console.log(err)\r\n            }\r\n        }\r\n        getUser()\r\n    },[currentChat])\r\n\r\n    // Connecting to socket and receiving message\r\n    useEffect(()=>{\r\n        socket.current = io(\"https://car-saathi-socket.onrender.com\")\r\n        socket.current.on(\"getMessage\",data=>{\r\n            setArrivalMessage({\r\n                sender: data.senderId,\r\n                text: data.text,\r\n                createdAt: Date.now()\r\n            })\r\n        })\r\n    },[])\r\n \r\n    // For updating messages array when a real time message is received\r\n    useEffect(()=>{\r\n       arrivalMessage && currentChat?.members.includes(arrivalMessage.sender) && \r\n       setMessages((prev)=>[...prev,arrivalMessage])\r\n    },[arrivalMessage,currentChat])\r\n\r\n\r\n    // To add current user to the room and get list of all users in the room\r\n    useEffect(()=>{\r\n        socket.current.emit(\"addUser\",user._id)\r\n        socket.current.on(\"getUsers\",users=>{\r\n            console.log(\"Online users\",users)\r\n            setOnlineUsers(users)\r\n        })\r\n    },[user])\r\n    console.log(socket)\r\n\r\n    // To get all conversations of the user \r\n    useEffect(()=>{\r\n        const getConversations = async()=>{\r\n            try{\r\n            const res = await axios.get(\"https://car-saathi.onrender.com/api/conversation/getConversation/\"+user._id)\r\n            setConversations(res.data)\r\n            setIsLoading(false)\r\n            console.log(\"conversations\",res.data);\r\n            }catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n        getConversations()\r\n    },[user._id])\r\n\r\n    // To fetch messages of current chat\r\n    useEffect(()=>{\r\n        const getMessages = async() =>{\r\n            try{\r\n                const res = await axios.get(\"https://car-saathi.onrender.com/api/message/\"+currentChat._id)\r\n                setMessages(res.data)\r\n                setIsLoaded(true)\r\n            }catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n        getMessages()\r\n    },[currentChat])\r\n\r\n\r\n    useEffect(()=>{\r\n        scrollRef?.current?.scrollIntoView({behavior:\"smooth\"})\r\n    },[messages])\r\n\r\n    console.log(messages)\r\n\r\n    //To get online status of people\r\n    useEffect(() => {\r\n        const friendId = currentChat?.members?.find(m => m !== user._id);\r\n        if (friendId) {\r\n          const isFriendOnline = onlineUsers.some(user => user?.userId === friendId);\r\n          setIsOnline(isFriendOnline);\r\n        }\r\n      }, [currentChat, onlineUsers, user._id]);\r\n\r\n    //Function to send message\r\n    const handleSubmit = async(e)=>{\r\n        // e.preventDefault();\r\n        const msg = {\r\n            sender: user._id,\r\n            conversationId: currentChat._id,\r\n            text: newMessage\r\n        }\r\n\r\n        const receiverId = currentChat.members.find(member => member!=user._id)\r\n        \r\n        socket.current.emit(\"sendMessage\",{\r\n            senderId: user._id,\r\n            receiverId,\r\n            text: newMessage\r\n        })\r\n\r\n        try{\r\n            const res = await axios.post(\"https://car-saathi.onrender.com/api/message/\",msg)\r\n            setMessages([...messages,res.data])\r\n            setNewMessage(\"\")\r\n\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n\r\n    }\r\n\r\n    //Function to handle click on back arrow\r\n      const handleBack = ()=>{\r\n        setCurrentChat(null)\r\n      }\r\n  return (\r\n    <div>\r\n        <Navbar user={user} setIsLoggedIn={setIsLoggedIn} />\r\n        {!isLoading ? (<div style={{ position: \"relative\", height: \"90vh\" }}>\r\n         <MainContainer>\r\n          <ConversationList>\r\n            {conversations?.map((c)=>{\r\n                 return <div onClick={()=>setCurrentChat(c)}><ConversationListItem conversation={c} user={user} onlineUsers={onlineUsers}/></div>\r\n            })} \r\n          </ConversationList>\r\n            { currentChat ? isLoaded ? (\r\n                        <>\r\n            <ChatContainer style={{height: '600px', width:'full'}}>\r\n                <ConversationHeader>\r\n                    <ConversationHeader.Back onClick={handleBack}/>\r\n                    <Avatar\r\n                    name={receiver}\r\n                    src={`https://ui-avatars.com/api/?name=${receiver}&background=random`}\r\n                    status = {isOnline ? \"available\" : \"unavailable\"}\r\n                    />\r\n                    <ConversationHeader.Content\r\n                        info={isOnline ? \"Online\" : \"Offline\"}\r\n                        userName={receiver}\r\n                    />\r\n                </ConversationHeader>\r\n\r\n                <MessageList>\r\n                    {/* <MessageSeparator content=\"Saturday, 30 November 2019\" /> */}\r\n                    {\r\n                        messages.map((m)=>(\r\n                            <div ref={scrollRef}>\r\n                            <MessageItem message={m} own={user._id===m.sender}/>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    </MessageList>\r\n\r\n                <MessageInput\r\n                    placeholder=\"Type message here\"\r\n                    attachButton='false'\r\n                    value={newMessage}\r\n                    onChange={(innerText) => {\r\n                        console.log(innerText);\r\n                        setNewMessage(innerText);\r\n                    }}\r\n                    onSend={handleSubmit}\r\n                />\r\n            </ChatContainer>\r\n            </>\r\n        ):\r\n        <Loader/>\r\n         : (\r\n            <div className='flex justify-center w-full items-center bold text-gray-300 text-3xl'>Open a chat to start a conversation</div>\r\n        )\r\n    }\r\n    </MainContainer>\r\n    </div>) : \r\n    <Loader/>\r\n}\r\n\r\n    </div>\r\n  )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}