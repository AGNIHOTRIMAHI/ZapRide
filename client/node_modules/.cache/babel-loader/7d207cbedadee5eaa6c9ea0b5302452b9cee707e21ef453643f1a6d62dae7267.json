{"ast":null,"code":"var _jsxFileName = \"D:\\\\ZapRide\\\\client\\\\src\\\\components\\\\Conversation\\\\ConversationListItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Conversation, Avatar, Loader } from \"@chatscope/chat-ui-kit-react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ConversationListItem = ({\n  conversation,\n  user,\n  onlineUsers\n}) => {\n  _s();\n  const [usr, setUsr] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  console.log('Conversation', conversation);\n  console.log(\"messages\", messages);\n\n  // Fetching details of the receiver\n  useEffect(() => {\n    const friendId = conversation.members.find(m => m !== user._id);\n    // console.log(friendId)\n    const getUser = async () => {\n      try {\n        const res = await axios(\"https://car-saathi.onrender.com/api/user/getUser/\" + friendId);\n        console.log(res.data.user);\n        setUsr(res.data.user);\n        setIsLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getUser();\n  }, []);\n\n  // Fetching all messages of the conversation\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"https://car-saathi.onrender.com/api/message/\" + conversation._id);\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, []);\n\n  //Finding the last sent message and its sender\n  const lastmsg = messages[messages.length - 1];\n  let lastsender;\n  if ((lastmsg === null || lastmsg === void 0 ? void 0 : lastmsg.sender) == (user === null || user === void 0 ? void 0 : user._id)) {\n    lastsender = user === null || user === void 0 ? void 0 : user.name;\n  } else {\n    lastsender = usr === null || usr === void 0 ? void 0 : usr.name;\n  }\n\n  //Finding status of the user\n  const isOnline = onlineUsers.some(user => (user === null || user === void 0 ? void 0 : user.userId) === (usr === null || usr === void 0 ? void 0 : usr._id));\n  console.log(usr);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoaded ? /*#__PURE__*/_jsxDEV(Conversation, {\n      info: lastmsg === null || lastmsg === void 0 ? void 0 : lastmsg.text,\n      lastSenderName: lastmsg && lastsender,\n      name: usr === null || usr === void 0 ? void 0 : usr.name,\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        name: usr === null || usr === void 0 ? void 0 : usr.name,\n        src: `https://ui-avatars.com/api/?name=${usr === null || usr === void 0 ? void 0 : usr.name}&background=random`,\n        status: isOnline ? \"available\" : \"unavailable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ConversationListItem, \"gy7U/jJDOWQRVk7bzSVOuX20+pc=\");\n_c = ConversationListItem;\nvar _c;\n$RefreshReg$(_c, \"ConversationListItem\");","map":{"version":3,"names":["React","useEffect","useState","Conversation","Avatar","Loader","axios","jsxDEV","_jsxDEV","ConversationListItem","conversation","user","onlineUsers","_s","usr","setUsr","messages","setMessages","isLoaded","setIsLoaded","console","log","friendId","members","find","m","_id","getUser","res","data","err","getMessages","get","lastmsg","length","lastsender","sender","name","isOnline","some","userId","children","info","text","lastSenderName","src","status","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ZapRide/client/src/components/Conversation/ConversationListItem.jsx"],"sourcesContent":["import React, { useEffect,useState } from 'react'\r\nimport {\r\n    Conversation,\r\n    Avatar,\r\n    Loader\r\n} from \"@chatscope/chat-ui-kit-react\";\r\nimport axios from \"axios\"\r\n\r\nexport const ConversationListItem = ({conversation,user,onlineUsers}) => {\r\n    const [usr,setUsr] = useState(null)\r\n    const [messages,setMessages] = useState([])\r\n    const [isLoaded,setIsLoaded] = useState(false)\r\n    console.log('Conversation',conversation);\r\n    console.log(\"messages\",messages)\r\n\r\n    // Fetching details of the receiver\r\n    useEffect(()=>{\r\n        const friendId = conversation.members.find(m=> m !== user._id)\r\n        // console.log(friendId)\r\n        const getUser = async()=>{\r\n            try{\r\n                const res= await axios(\"https://car-saathi.onrender.com/api/user/getUser/\"+friendId);\r\n                console.log(res.data.user)\r\n                setUsr(res.data.user)\r\n                setIsLoaded(true)\r\n\r\n            }catch(err){\r\n               console.log(err)\r\n            }\r\n        }\r\n        getUser()\r\n    },[])\r\n\r\n    // Fetching all messages of the conversation\r\n    useEffect(()=>{\r\n      const getMessages = async() =>{\r\n          try{\r\n              const res = await axios.get(\"https://car-saathi.onrender.com/api/message/\"+conversation._id)\r\n              setMessages(res.data)\r\n          }catch(err){\r\n              console.log(err)\r\n          }\r\n      }\r\n      getMessages()\r\n  },[])\r\n\r\n    //Finding the last sent message and its sender\r\n    const lastmsg = messages[messages.length-1]\r\n    let lastsender;\r\n    if(lastmsg?.sender==user?._id){\r\n        lastsender = user?.name\r\n    }else{\r\n      lastsender = usr?.name\r\n    }\r\n\r\n    //Finding status of the user\r\n    const isOnline = onlineUsers.some(user=>user?.userId === usr?._id)\r\n    console.log(usr);\r\n\r\n    return (\r\n    <div>\r\n      {isLoaded ? (\r\n      <Conversation\r\n      info={lastmsg?.text}\r\n      lastSenderName={lastmsg && lastsender}\r\n      name={usr?.name}\r\n      >\r\n      <Avatar\r\n        name={usr?.name}\r\n        src={`https://ui-avatars.com/api/?name=${usr?.name}&background=random`} \r\n        status = {isOnline ? \"available\" : \"unavailable\"}\r\n     />\r\n    </Conversation>\r\n      ) : <Loader/>\r\n      }\r\n        \r\n    </div>\r\n  )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AACjD,SACIC,YAAY,EACZC,MAAM,EACNC,MAAM,QACH,8BAA8B;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,OAAO,MAAMC,oBAAoB,GAAGA,CAAC;EAACC,YAAY;EAACC,IAAI;EAACC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,GAAG,EAACC,MAAM,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACnC,MAAM,CAACc,QAAQ,EAACC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACgB,QAAQ,EAACC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC9CkB,OAAO,CAACC,GAAG,CAAC,cAAc,EAACX,YAAY,CAAC;EACxCU,OAAO,CAACC,GAAG,CAAC,UAAU,EAACL,QAAQ,CAAC;;EAEhC;EACAf,SAAS,CAAC,MAAI;IACV,MAAMqB,QAAQ,GAAGZ,YAAY,CAACa,OAAO,CAACC,IAAI,CAACC,CAAC,IAAGA,CAAC,KAAKd,IAAI,CAACe,GAAG,CAAC;IAC9D;IACA,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAS;MACrB,IAAG;QACC,MAAMC,GAAG,GAAE,MAAMtB,KAAK,CAAC,mDAAmD,GAACgB,QAAQ,CAAC;QACpFF,OAAO,CAACC,GAAG,CAACO,GAAG,CAACC,IAAI,CAAClB,IAAI,CAAC;QAC1BI,MAAM,CAACa,GAAG,CAACC,IAAI,CAAClB,IAAI,CAAC;QACrBQ,WAAW,CAAC,IAAI,CAAC;MAErB,CAAC,QAAMW,GAAG,EAAC;QACRV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;MACnB;IACJ,CAAC;IACDH,OAAO,CAAC,CAAC;EACb,CAAC,EAAC,EAAE,CAAC;;EAEL;EACA1B,SAAS,CAAC,MAAI;IACZ,MAAM8B,WAAW,GAAG,MAAAA,CAAA,KAAU;MAC1B,IAAG;QACC,MAAMH,GAAG,GAAG,MAAMtB,KAAK,CAAC0B,GAAG,CAAC,8CAA8C,GAACtB,YAAY,CAACgB,GAAG,CAAC;QAC5FT,WAAW,CAACW,GAAG,CAACC,IAAI,CAAC;MACzB,CAAC,QAAMC,GAAG,EAAC;QACPV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;MACpB;IACJ,CAAC;IACDC,WAAW,CAAC,CAAC;EACjB,CAAC,EAAC,EAAE,CAAC;;EAEH;EACA,MAAME,OAAO,GAAGjB,QAAQ,CAACA,QAAQ,CAACkB,MAAM,GAAC,CAAC,CAAC;EAC3C,IAAIC,UAAU;EACd,IAAG,CAAAF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,MAAM,MAAEzB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEe,GAAG,GAAC;IAC1BS,UAAU,GAAGxB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE0B,IAAI;EAC3B,CAAC,MAAI;IACHF,UAAU,GAAGrB,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEuB,IAAI;EACxB;;EAEA;EACA,MAAMC,QAAQ,GAAG1B,WAAW,CAAC2B,IAAI,CAAC5B,IAAI,IAAE,CAAAA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE6B,MAAM,OAAK1B,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEY,GAAG,EAAC;EAClEN,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;EAEhB,oBACAN,OAAA;IAAAiC,QAAA,EACGvB,QAAQ,gBACTV,OAAA,CAACL,YAAY;MACbuC,IAAI,EAAET,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEU,IAAK;MACpBC,cAAc,EAAEX,OAAO,IAAIE,UAAW;MACtCE,IAAI,EAAEvB,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEuB,IAAK;MAAAI,QAAA,eAEhBjC,OAAA,CAACJ,MAAM;QACLiC,IAAI,EAAEvB,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEuB,IAAK;QAChBQ,GAAG,EAAE,oCAAoC/B,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEuB,IAAI,oBAAqB;QACvES,MAAM,EAAIR,QAAQ,GAAG,WAAW,GAAG;MAAc;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW,CAAC,gBACT1C,OAAA,CAACH,MAAM;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGV,CAAC;AAEV,CAAC;AAAArC,EAAA,CAtEYJ,oBAAoB;AAAA0C,EAAA,GAApB1C,oBAAoB;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}