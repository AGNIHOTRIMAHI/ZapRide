{"ast":null,"code":"var _jsxFileName = \"D:\\\\ZapRide\\\\client\\\\src\\\\pages\\\\Rides\\\\Driver\\\\DriverRides.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport Navbar from \"../../../components/Navbar/Navbar.jsx\";\nimport TripCard from \"../../../components/Cards/trip.jsx\";\nimport Paper from '@mui/material/Paper';\nimport { styled as sty } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DemoPaper = sty(Paper)(({\n  theme\n}) => ({\n  width: 120,\n  height: 120,\n  padding: theme.spacing(2),\n  ...theme.typography.body2,\n  textAlign: 'center'\n}));\nconst Title = styled.h1`\n  font-size: 2.5rem;\n  font-weight: bold;\n  margin-bottom: 1.5rem;\n    text-align: center;\n  color: #171717; \n`;\n_c = Title;\nconst SectionTitle = styled.h2`\n  font-size: 2rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n  margin-top: 2rem;\n  color: #171717;\n`;\n_c2 = SectionTitle;\nconst TripsGrid = styled.div`\n  display: grid;\n  margin-top: 1.5rem;\n  grid-template-columns: repeat(2,1fr);\n  gap: 1rem;\n  width: 100%;\n`;\n_c3 = TripsGrid;\nfunction DriverRides({\n  user,\n  setIsLoggedIn,\n  setCurrentChat,\n  currentChat\n}) {\n  _s();\n  const [trips, setTrips] = useState([]);\n  const [update, setupdate] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const getTrips = async () => {\n      try {\n        const response = await axios.get(`https://car-saathi.onrender.com/api/trip/mytrips/${user._id}`);\n        // console.log(user._id);\n        console.log(response.data.trips);\n        setTrips(response.data.trips);\n        setIsLoading(false);\n      } catch (err) {\n        if (err.response) {\n          alert(err.response.data.message);\n        } else {\n          console.log(err);\n        }\n      }\n    };\n    getTrips();\n  }, []);\n  const upcomingTrips = trips.filter(trip => {\n    const tripDate = new Date(trip.time);\n    return tripDate > new Date();\n  });\n  console.log(upcomingTrips);\n  const pastTrips = trips.filter(trip => {\n    const tripDate = new Date(trip.time);\n    return tripDate <= new Date();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      user: user,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Your Rides\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"Upcoming Rides:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), upcomingTrips.length > 0 ? /*#__PURE__*/_jsxDEV(TripsGrid, {\n          children: upcomingTrips.map(trip => /*#__PURE__*/_jsxDEV(TripCard, {\n            trip: trip,\n            setupdate: setupdate,\n            setCurrentChat: setCurrentChat,\n            currentChat: currentChat\n          }, trip._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-slate-400 p-1\",\n          children: \"You have no upcoming rides.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"Past Rides:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), pastTrips.length > 0 ? /*#__PURE__*/_jsxDEV(TripsGrid, {\n          children: pastTrips.map(trip => /*#__PURE__*/_jsxDEV(TripCard, {\n            trip: trip,\n            setupdate: setupdate,\n            setCurrentChat: setCurrentChat,\n            currentChat: currentChat\n          }, trip._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-slate-400 p-1\",\n          children: \"You have no past rides.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(DriverRides, \"FSaxBm8XG0VnB+BCFcitXoB4H+g=\");\n_c4 = DriverRides;\nexport default DriverRides;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"SectionTitle\");\n$RefreshReg$(_c3, \"TripsGrid\");\n$RefreshReg$(_c4, \"DriverRides\");","map":{"version":3,"names":["React","useEffect","useState","axios","styled","Navbar","TripCard","Paper","sty","jsxDEV","_jsxDEV","Fragment","_Fragment","DemoPaper","theme","width","height","padding","spacing","typography","body2","textAlign","Title","h1","_c","SectionTitle","h2","_c2","TripsGrid","div","_c3","DriverRides","user","setIsLoggedIn","setCurrentChat","currentChat","_s","trips","setTrips","update","setupdate","isLoading","setIsLoading","getTrips","response","get","_id","console","log","data","err","alert","message","upcomingTrips","filter","trip","tripDate","Date","time","pastTrips","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","_c4","$RefreshReg$"],"sources":["D:/ZapRide/client/src/pages/Rides/Driver/DriverRides.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"../../../components/Navbar/Navbar.jsx\";\r\nimport TripCard from \"../../../components/Cards/trip.jsx\";\r\nimport Paper from '@mui/material/Paper';\r\nimport { styled as sty} from '@mui/material/styles';\r\n\r\nconst DemoPaper = sty(Paper)(({ theme }) => ({\r\n  width: 120,\r\n  height: 120,\r\n  padding: theme.spacing(2),\r\n  ...theme.typography.body2,\r\n  textAlign: 'center',\r\n}));\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  font-weight: bold;\r\n  margin-bottom: 1.5rem;\r\n    text-align: center;\r\n  color: #171717; \r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  margin-bottom: 1rem;\r\n  margin-top: 2rem;\r\n  color: #171717;\r\n`;\r\n\r\nconst TripsGrid = styled.div`\r\n  display: grid;\r\n  margin-top: 1.5rem;\r\n  grid-template-columns: repeat(2,1fr);\r\n  gap: 1rem;\r\n  width: 100%;\r\n`;\r\n\r\nfunction DriverRides({ user, setIsLoggedIn,setCurrentChat,\r\n  currentChat }) {\r\n  const [trips, setTrips] = useState([]);\r\n  const [update,setupdate]=useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    const getTrips = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://car-saathi.onrender.com/api/trip/mytrips/${user._id}`\r\n        );\r\n        // console.log(user._id);\r\n        console.log(response.data.trips);\r\n        setTrips(response.data.trips);\r\n        setIsLoading(false)\r\n      } catch (err) {\r\n        if (err.response) {\r\n          alert(err.response.data.message);\r\n        } else {\r\n          console.log(err);\r\n        }\r\n      }\r\n    };\r\n    getTrips();\r\n  }, []);\r\n\r\n\r\n\r\n  const upcomingTrips = trips.filter((trip) => {\r\n    const tripDate = new Date(trip.time);\r\n    return tripDate > new Date();\r\n  });\r\n  console.log(upcomingTrips)\r\n\r\n  const pastTrips = trips.filter((trip) => {\r\n    const tripDate = new Date(trip.time);\r\n    return tripDate <= new Date();\r\n  });\r\n\r\n  return (\r\n\r\n    \r\n    <>\r\n      <Navbar user={user} setIsLoggedIn={setIsLoggedIn} />\r\n      {/* <GradientContainer> */}\r\n      <div className=\"p-8\">\r\n        <Title>Your Rides</Title>\r\n\r\n        {/* Upcoming Rides */}\r\n        <div>\r\n          <SectionTitle>Upcoming Rides:</SectionTitle>\r\n          {upcomingTrips.length > 0 ? (\r\n            <TripsGrid>\r\n              {upcomingTrips.map((trip) => (\r\n                <TripCard key={trip._id} trip={trip} setupdate={setupdate}  setCurrentChat={setCurrentChat} currentChat={currentChat}/>\r\n              ))}\r\n            </TripsGrid>\r\n          ) : (\r\n            <p className=\"text-slate-400 p-1\">You have no upcoming rides.</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Past Rides */}\r\n        <div>\r\n          <SectionTitle>Past Rides:</SectionTitle>\r\n          {pastTrips.length > 0 ? (\r\n            <TripsGrid>\r\n              {pastTrips.map((trip) => (\r\n                <TripCard key={trip._id} trip={trip} setupdate={setupdate} setCurrentChat={setCurrentChat} currentChat={currentChat} />\r\n              ))}\r\n            </TripsGrid>\r\n          ) : (\r\n            <p className=\"text-slate-400 p-1\">You have no past rides.</p>\r\n          )}\r\n        </div>\r\n        </div>\r\n      {/* </GradientContainer> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DriverRides;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}