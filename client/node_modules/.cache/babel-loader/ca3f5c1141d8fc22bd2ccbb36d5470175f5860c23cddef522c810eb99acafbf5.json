{"ast":null,"code":"var _jsxFileName = \"D:\\\\ZapRide\\\\client\\\\src\\\\components\\\\GMap\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, Marker, DirectionsRenderer, Circle, MarkerClusterer, Autocomplete } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  directionsResponses\n}) => {\n  _s();\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [source, setSource] = useState();\n  const [selectedRouteIndex, setSelectedRouteIndex] = useState();\n  const handleRouteClick = index => {\n    setSelectedRouteIndex(index);\n  };\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCurrentLocation({\n          lat: latitude,\n          lng: longitude\n        });\n      }, error => {\n        console.error(\"Error getting current location:\", error);\n        setError(\"Error getting current location\");\n      });\n    } else {\n      setError(\"Geolocation is not supported by this browser\");\n    }\n  }, []);\n  const mapContainerStyle = {\n    height: \"420px\",\n    width: \"108%\",\n    margin: \"20px auto\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"80%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          mapContainerStyle: mapContainerStyle,\n          zoom: 13,\n          center: currentLocation || {\n            lat: -34.397,\n            lng: 150.644\n          },\n          children: [currentLocation && /*#__PURE__*/_jsxDEV(Marker, {\n            position: currentLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), directionsResponses && directionsResponses.routes.map((route, index) => /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n            directions: {\n              ...directionsResponses,\n              routes: [route]\n            },\n            options: {\n              polylineOptions: {\n                strokeColor: \"blue\",\n                strokeOpacity: index === selectedRouteIndex ? 1 : 0.5,\n                strokeWeight: index === selectedRouteIndex ? 8 : 4\n              }\n            },\n            onClick: () => handleRouteClick(index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)), (!directionsResponses || directionsResponses.routes.length === 0) && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please enter valid route locations.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"76nDMB3LZHvur5GXvF6lBa4Aon0=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","Marker","DirectionsRenderer","Circle","MarkerClusterer","Autocomplete","jsxDEV","_jsxDEV","Map","directionsResponses","_s","currentLocation","setCurrentLocation","response","setResponse","error","setError","source","setSource","selectedRouteIndex","setSelectedRouteIndex","handleRouteClick","index","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","console","mapContainerStyle","height","width","margin","borderRadius","boxShadow","children","style","display","justifyContent","zoom","center","fileName","_jsxFileName","lineNumber","columnNumber","routes","map","route","directions","options","polylineOptions","strokeColor","strokeOpacity","strokeWeight","onClick","length","_c","$RefreshReg$"],"sources":["D:/ZapRide/client/src/components/GMap/Map.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  Marker,\r\n  DirectionsRenderer,\r\n  Circle,\r\n  MarkerClusterer,\r\n  Autocomplete,\r\n} from \"@react-google-maps/api\";\r\n\r\nconst Map = ({ directionsResponses }) => {\r\n  const [currentLocation, setCurrentLocation] = useState(null);\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [source, setSource] = useState();\r\n  const [selectedRouteIndex, setSelectedRouteIndex] = useState();\r\n\r\n  const handleRouteClick = (index) => {\r\n    setSelectedRouteIndex(index);\r\n  };\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setCurrentLocation({ lat: latitude, lng: longitude });\r\n        },\r\n        (error) => {\r\n          console.error(\"Error getting current location:\", error);\r\n          setError(\"Error getting current location\");\r\n        }\r\n      );\r\n    } else {\r\n      setError(\"Geolocation is not supported by this browser\");\r\n    }\r\n  }, []);\r\n\r\n  const mapContainerStyle = {\r\n    height: \"420px\",\r\n    width: \"108%\",\r\n    margin: \"20px auto\",\r\n    borderRadius: \"8px\",\r\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <div style={{ width: \"80%\" }}>\r\n          <GoogleMap\r\n            mapContainerStyle={mapContainerStyle}\r\n            zoom={13}\r\n            center={currentLocation || { lat: -34.397, lng: 150.644 }}\r\n          >\r\n            {currentLocation && <Marker position={currentLocation} />}\r\n            {directionsResponses &&\r\n              directionsResponses.routes.map((route, index) => (\r\n                <DirectionsRenderer\r\n                  key={index}\r\n                  directions={{ ...directionsResponses, routes: [route] }}\r\n                  options={{\r\n                    polylineOptions: {\r\n                      strokeColor: \"blue\",\r\n                      strokeOpacity: index === selectedRouteIndex ? 1 : 0.5,\r\n                      strokeWeight: index === selectedRouteIndex ? 8 : 4,\r\n                    },\r\n                  }}\r\n                  onClick={() => handleRouteClick(index)}\r\n                />\r\n              ))}\r\n            {(!directionsResponses ||\r\n              directionsResponses.routes.length === 0) && (\r\n              <p>Please enter valid route locations.</p>\r\n            )}\r\n            {error && <p>{error}</p>}\r\n          </GoogleMap>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}